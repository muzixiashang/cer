<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.liyunet.mapper.chargeMapper.ChargeOrderInfoMapper" >
  <resultMap id="BaseResultMap" type="com.liyunet.domain.charge.ChargeOrderInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="bidt_num" property="bidtNum" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="VARCHAR" />
    <result column="cid" property="cid" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
    <result column="order_type" property="orderType" jdbcType="INTEGER" />
    <result column="plus_minus" property="plusMinus" jdbcType="INTEGER" />
    <result column="is_bidt" property="isBidt" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, order_id, bidt_num, createtime, cid, userId, status, reason, order_type, plus_minus, 
    is_bidt
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.liyunet.domain.charge.ChargeOrderInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from charge_order_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from charge_order_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from charge_order_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.liyunet.domain.charge.ChargeOrderInfoExample" >
    delete from charge_order_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.liyunet.domain.charge.ChargeOrderInfo" >
    insert into charge_order_info (id, order_id, bidt_num, 
      createtime, cid, userId, 
      status, reason, order_type, 
      plus_minus, is_bidt)
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=VARCHAR}, #{bidtNum,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=VARCHAR}, #{cid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{reason,jdbcType=VARCHAR}, #{orderType,jdbcType=INTEGER}, 
      #{plusMinus,jdbcType=INTEGER}, #{isBidt,jdbcType=INTEGER})
  </insert>
  
   <insert id="insertSelectKey" parameterType="com.liyunet.domain.charge.ChargeOrderInfo" useGeneratedKeys="true" keyProperty="id">
    insert into charge_order_info (id, order_id, bidt_num, 
      createtime, cid, userId, 
      status, reason, order_type, 
      plus_minus, is_bidt)
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=VARCHAR}, #{bidtNum,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=VARCHAR}, #{cid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{reason,jdbcType=VARCHAR}, #{orderType,jdbcType=INTEGER}, 
      #{plusMinus,jdbcType=INTEGER}, #{isBidt,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.liyunet.domain.charge.ChargeOrderInfo" >
    insert into charge_order_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="bidtNum != null" >
        bidt_num,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="cid != null" >
        cid,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="reason != null" >
        reason,
      </if>
      <if test="orderType != null" >
        order_type,
      </if>
      <if test="plusMinus != null" >
        plus_minus,
      </if>
      <if test="isBidt != null" >
        is_bidt,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="bidtNum != null" >
        #{bidtNum,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="cid != null" >
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="orderType != null" >
        #{orderType,jdbcType=INTEGER},
      </if>
      <if test="plusMinus != null" >
        #{plusMinus,jdbcType=INTEGER},
      </if>
      <if test="isBidt != null" >
        #{isBidt,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.liyunet.domain.charge.ChargeOrderInfoExample" resultType="java.lang.Integer" >
    select count(*) from charge_order_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update charge_order_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.bidtNum != null" >
        bidt_num = #{record.bidtNum,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=VARCHAR},
      </if>
      <if test="record.cid != null" >
        cid = #{record.cid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.reason != null" >
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.orderType != null" >
        order_type = #{record.orderType,jdbcType=INTEGER},
      </if>
      <if test="record.plusMinus != null" >
        plus_minus = #{record.plusMinus,jdbcType=INTEGER},
      </if>
      <if test="record.isBidt != null" >
        is_bidt = #{record.isBidt,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update charge_order_info
    set id = #{record.id,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=VARCHAR},
      bidt_num = #{record.bidtNum,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=VARCHAR},
      cid = #{record.cid,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      reason = #{record.reason,jdbcType=VARCHAR},
      order_type = #{record.orderType,jdbcType=INTEGER},
      plus_minus = #{record.plusMinus,jdbcType=INTEGER},
      is_bidt = #{record.isBidt,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.liyunet.domain.charge.ChargeOrderInfo" >
    update charge_order_info
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="bidtNum != null" >
        bidt_num = #{bidtNum,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="cid != null" >
        cid = #{cid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="orderType != null" >
        order_type = #{orderType,jdbcType=INTEGER},
      </if>
      <if test="plusMinus != null" >
        plus_minus = #{plusMinus,jdbcType=INTEGER},
      </if>
      <if test="isBidt != null" >
        is_bidt = #{isBidt,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liyunet.domain.charge.ChargeOrderInfo" >
    update charge_order_info
    set order_id = #{orderId,jdbcType=VARCHAR},
      bidt_num = #{bidtNum,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=VARCHAR},
      cid = #{cid,jdbcType=INTEGER},
      userId = #{userid,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      reason = #{reason,jdbcType=VARCHAR},
      order_type = #{orderType,jdbcType=INTEGER},
      plus_minus = #{plusMinus,jdbcType=INTEGER},
      is_bidt = #{isBidt,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>