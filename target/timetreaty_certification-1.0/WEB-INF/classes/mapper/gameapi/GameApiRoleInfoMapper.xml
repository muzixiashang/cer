<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.liyunet.mapper.gameapiMapper.GameApiRoleInfoMapper" >
  <resultMap id="BaseResultMap" type="com.liyunet.domain.gameapi.GameApiRoleInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="VARCHAR" />
    <result column="dealtime" property="dealtime" jdbcType="VARCHAR" />
    <result column="remark_" property="remark" jdbcType="VARCHAR" />
    <result column="role_id" property="roleId" jdbcType="VARCHAR" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="server_id" property="serverId" jdbcType="VARCHAR" />
    <result column="server_name" property="serverName" jdbcType="VARCHAR" />
    <result column="game_id" property="gameId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="open_id" property="openId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, createtime, dealtime, remark_, role_id, role_name, server_id, server_name, game_id, 
    user_id, open_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.liyunet.domain.gameapi.GameApiRoleInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from game_api_role_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from game_api_role_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from game_api_role_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.liyunet.domain.gameapi.GameApiRoleInfoExample" >
    delete from game_api_role_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.liyunet.domain.gameapi.GameApiRoleInfo" >
    insert into game_api_role_info (id, createtime, dealtime, 
      remark_, role_id, role_name, 
      server_id, server_name, game_id, 
      user_id, open_id)
    values (#{id,jdbcType=INTEGER}, #{createtime,jdbcType=VARCHAR}, #{dealtime,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, 
      #{serverId,jdbcType=VARCHAR}, #{serverName,jdbcType=VARCHAR}, #{gameId,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER}, #{openId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.liyunet.domain.gameapi.GameApiRoleInfo" >
    insert into game_api_role_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="dealtime != null" >
        dealtime,
      </if>
      <if test="remark != null" >
        remark_,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="serverId != null" >
        server_id,
      </if>
      <if test="serverName != null" >
        server_name,
      </if>
      <if test="gameId != null" >
        game_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="openId != null" >
        open_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="dealtime != null" >
        #{dealtime,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="serverId != null" >
        #{serverId,jdbcType=VARCHAR},
      </if>
      <if test="serverName != null" >
        #{serverName,jdbcType=VARCHAR},
      </if>
      <if test="gameId != null" >
        #{gameId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="openId != null" >
        #{openId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.liyunet.domain.gameapi.GameApiRoleInfoExample" resultType="java.lang.Integer" >
    select count(*) from game_api_role_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update game_api_role_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=VARCHAR},
      </if>
      <if test="record.dealtime != null" >
        dealtime = #{record.dealtime,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark_ = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.roleId != null" >
        role_id = #{record.roleId,jdbcType=VARCHAR},
      </if>
      <if test="record.roleName != null" >
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.serverId != null" >
        server_id = #{record.serverId,jdbcType=VARCHAR},
      </if>
      <if test="record.serverName != null" >
        server_name = #{record.serverName,jdbcType=VARCHAR},
      </if>
      <if test="record.gameId != null" >
        game_id = #{record.gameId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.openId != null" >
        open_id = #{record.openId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update game_api_role_info
    set id = #{record.id,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=VARCHAR},
      dealtime = #{record.dealtime,jdbcType=VARCHAR},
      remark_ = #{record.remark,jdbcType=VARCHAR},
      role_id = #{record.roleId,jdbcType=VARCHAR},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      server_id = #{record.serverId,jdbcType=VARCHAR},
      server_name = #{record.serverName,jdbcType=VARCHAR},
      game_id = #{record.gameId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      open_id = #{record.openId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.liyunet.domain.gameapi.GameApiRoleInfo" >
    update game_api_role_info
    <set >
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="dealtime != null" >
        dealtime = #{dealtime,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark_ = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="serverId != null" >
        server_id = #{serverId,jdbcType=VARCHAR},
      </if>
      <if test="serverName != null" >
        server_name = #{serverName,jdbcType=VARCHAR},
      </if>
      <if test="gameId != null" >
        game_id = #{gameId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="openId != null" >
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liyunet.domain.gameapi.GameApiRoleInfo" >
    update game_api_role_info
    set createtime = #{createtime,jdbcType=VARCHAR},
      dealtime = #{dealtime,jdbcType=VARCHAR},
      remark_ = #{remark,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=VARCHAR},
      role_name = #{roleName,jdbcType=VARCHAR},
      server_id = #{serverId,jdbcType=VARCHAR},
      server_name = #{serverName,jdbcType=VARCHAR},
      game_id = #{gameId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      open_id = #{openId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>