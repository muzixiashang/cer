<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.liyunet.mapper.betMapper.BetInfoMapper">
	<resultMap id="BaseResultMap" type="com.liyunet.domain.bet.BetInfo">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="title" property="title" jdbcType="VARCHAR" />
		<result column="banner" property="banner" jdbcType="VARCHAR" />
		<result column="context" property="context" jdbcType="VARCHAR" />
		<result column="createtime" property="createtime" jdbcType="VARCHAR" />
		<result column="endtime" property="endtime" jdbcType="VARCHAR" />
		<result column="state" property="state" jdbcType="INTEGER" />
		<result column="sort" property="sort" jdbcType="INTEGER" />
		<result column="lottery_status" property="lotteryStatus"
			jdbcType="INTEGER" />
		<result column="result" property="result" jdbcType="VARCHAR" />
		<result column="result_id" property="resultId" jdbcType="INTEGER" />
		<result column="tp" property="tp" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, title, banner, context, createtime, endtime, state,
		sort,
		lottery_status, result,
		result_id, tp
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.liyunet.domain.bet.BetInfoExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from bet_info
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from bet_info
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		bet_info
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.liyunet.domain.bet.BetInfoExample">
		delete from bet_info
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.liyunet.domain.bet.BetInfo">
		insert into bet_info (id,
		title, banner,
		context, createtime, endtime,
		state, sort,
		lottery_status,
		result, result_id, tp
		)
		values (#{id,jdbcType=INTEGER},
		#{title,jdbcType=VARCHAR},
		#{banner,jdbcType=VARCHAR},
		#{context,jdbcType=VARCHAR}, #{createtime,jdbcType=VARCHAR},
		#{endtime,jdbcType=VARCHAR},
		#{state,jdbcType=INTEGER},
		#{sort,jdbcType=INTEGER},
		#{lotteryStatus,jdbcType=INTEGER},
		#{result,jdbcType=VARCHAR}, #{resultId,jdbcType=INTEGER},
		#{tp,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.liyunet.domain.bet.BetInfo">
		insert into bet_info
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="title != null">
				title,
			</if>
			<if test="banner != null">
				banner,
			</if>
			<if test="context != null">
				context,
			</if>
			<if test="createtime != null">
				createtime,
			</if>
			<if test="endtime != null">
				endtime,
			</if>
			<if test="state != null">
				state,
			</if>
			<if test="sort != null">
				sort,
			</if>
			<if test="lotteryStatus != null">
				lottery_status,
			</if>
			<if test="result != null">
				result,
			</if>
			<if test="resultId != null">
				result_id,
			</if>
			<if test="tp != null">
				tp,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>
			<if test="banner != null">
				#{banner,jdbcType=VARCHAR},
			</if>
			<if test="context != null">
				#{context,jdbcType=VARCHAR},
			</if>
			<if test="createtime != null">
				#{createtime,jdbcType=VARCHAR},
			</if>
			<if test="endtime != null">
				#{endtime,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				#{state,jdbcType=INTEGER},
			</if>
			<if test="sort != null">
				#{sort,jdbcType=INTEGER},
			</if>
			<if test="lotteryStatus != null">
				#{lotteryStatus,jdbcType=INTEGER},
			</if>
			<if test="result != null">
				#{result,jdbcType=VARCHAR},
			</if>
			<if test="resultId != null">
				#{resultId,jdbcType=INTEGER},
			</if>
			<if test="tp != null">
				#{tp,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.liyunet.domain.bet.BetInfoExample"
		resultType="java.lang.Integer">
		select count(*) from bet_info
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update bet_info
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.title != null">
				title = #{record.title,jdbcType=VARCHAR},
			</if>
			<if test="record.banner != null">
				banner = #{record.banner,jdbcType=VARCHAR},
			</if>
			<if test="record.context != null">
				context = #{record.context,jdbcType=VARCHAR},
			</if>
			<if test="record.createtime != null">
				createtime = #{record.createtime,jdbcType=VARCHAR},
			</if>
			<if test="record.endtime != null">
				endtime = #{record.endtime,jdbcType=VARCHAR},
			</if>
			<if test="record.state != null">
				state = #{record.state,jdbcType=INTEGER},
			</if>
			<if test="record.sort != null">
				sort = #{record.sort,jdbcType=INTEGER},
			</if>
			<if test="record.lotteryStatus != null">
				lottery_status =
				#{record.lotteryStatus,jdbcType=INTEGER},
			</if>
			<if test="record.result != null">
				result = #{record.result,jdbcType=VARCHAR},
			</if>
			<if test="record.resultId != null">
				result_id = #{record.resultId,jdbcType=INTEGER},
			</if>
			<if test="record.tp != null">
				tp = #{record.tp,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update bet_info
		set id = #{record.id,jdbcType=INTEGER},
		title =
		#{record.title,jdbcType=VARCHAR},
		banner =
		#{record.banner,jdbcType=VARCHAR},
		context =
		#{record.context,jdbcType=VARCHAR},
		createtime =
		#{record.createtime,jdbcType=VARCHAR},
		endtime =
		#{record.endtime,jdbcType=VARCHAR},
		state =
		#{record.state,jdbcType=INTEGER},
		sort =
		#{record.sort,jdbcType=INTEGER},
		lottery_status =
		#{record.lotteryStatus,jdbcType=INTEGER},
		result =
		#{record.result,jdbcType=VARCHAR},
		result_id =
		#{record.resultId,jdbcType=INTEGER},
		tp = #{record.tp,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.liyunet.domain.bet.BetInfo">
		update bet_info
		<set>
			<if test="title != null">
				title = #{title,jdbcType=VARCHAR},
			</if>
			<if test="banner != null">
				banner = #{banner,jdbcType=VARCHAR},
			</if>
			<if test="context != null">
				context = #{context,jdbcType=VARCHAR},
			</if>
			<if test="createtime != null">
				createtime = #{createtime,jdbcType=VARCHAR},
			</if>
			<if test="endtime != null">
				endtime = #{endtime,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=INTEGER},
			</if>
			<if test="sort != null">
				sort = #{sort,jdbcType=INTEGER},
			</if>
			<if test="lotteryStatus != null">
				lottery_status = #{lotteryStatus,jdbcType=INTEGER},
			</if>
			<if test="result != null">
				result = #{result,jdbcType=VARCHAR},
			</if>
			<if test="resultId != null">
				result_id = #{resultId,jdbcType=INTEGER},
			</if>
			<if test="tp != null">
				tp = #{tp,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.liyunet.domain.bet.BetInfo">
		update bet_info
		set title = #{title,jdbcType=VARCHAR},
		banner =
		#{banner,jdbcType=VARCHAR},
		context = #{context,jdbcType=VARCHAR},
		createtime = #{createtime,jdbcType=VARCHAR},
		endtime =
		#{endtime,jdbcType=VARCHAR},
		state = #{state,jdbcType=INTEGER},
		sort =
		#{sort,jdbcType=INTEGER},
		lottery_status =
		#{lotteryStatus,jdbcType=INTEGER},
		result = #{result,jdbcType=VARCHAR},
		result_id = #{resultId,jdbcType=INTEGER},
		tp = #{tp,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!-- 新加 -->
	<select id="selectBetListone" resultMap="BaseResultMap">
		SELECT * FROM bet_info
		WHERE UNIX_TIMESTAMP( NOW( ) ) -
		UNIX_TIMESTAMP(endtime) &lt; 0 and
		lottery_status=1 and state=1 order
		by
		endtime asc limit #{page}
		,#{rows}

	</select>
	<select id="selectBetListtwo" resultMap="BaseResultMap">
		SELECT * FROM bet_info
		WHERE (UNIX_TIMESTAMP( NOW( ) ) -
		UNIX_TIMESTAMP(endtime) &gt;= 0 and
		lottery_status=1 and state=1) or
		(lottery_status=2 and state=1) order
		by
		lottery_status asc,endtime desc limit #{page}
		,#{rows}

	</select>



	<select id="selectBetHistoryList" resultMap="BaseResultMap">
		select bi.* from
		bet_user_info bu,bet_option_info bo,bet_info bi where
		bo.id=bu.boid and
		bo.bid=bi.id and bu.userId=#{userId} and
		status=#{status} GROUP BY
		bi.id ORDER BY bi.endtime asc
	</select>
</mapper>